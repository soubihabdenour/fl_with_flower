[2024-08-14 21:39:02,846][flwr][INFO] - Starting Flower simulation, config: num_rounds=10, no round_timeout
[2024-08-14 21:39:06,021][flwr][INFO] - Flower VCE: Ray initialized with resources: {'object_store_memory': 7577321472.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:115.145.171.128': 1.0, 'memory': 15154642944.0, 'CPU': 32.0, 'node:__internal_head__': 1.0}
[2024-08-14 21:39:06,021][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
[2024-08-14 21:39:06,021][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 24, 'num_gpus': 0.2}
[2024-08-14 21:39:06,029][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 1 actors
[2024-08-14 21:39:06,029][flwr][INFO] - [INIT]
[2024-08-14 21:39:06,029][flwr][INFO] - Requesting initial parameters from one random client
[2024-08-14 21:39:07,954][flwr][INFO] - Received initial parameters from one random client
[2024-08-14 21:39:07,954][flwr][INFO] - Evaluating initial global parameters
[2024-08-14 21:39:08,219][flwr][ERROR] - must be real number, not NoneType
[2024-08-14 21:39:08,220][flwr][ERROR] - Traceback (most recent call last):
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 127, in collate
    return elem_type({key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem})
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 127, in <dictcomp>
    return elem_type({key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem})
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 179, in collate_float_fn
    return torch.tensor(batch, dtype=torch.float64)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: must be real number, not NoneType

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/flwr/simulation/app.py", line 339, in start_simulation
    hist = run_fl(
           ^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/flwr/server/server.py", line 490, in run_fl
    hist, elapsed_time = server.fit(
                         ^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/flwr/server/server.py", line 95, in fit
    res = self.strategy.evaluate(0, parameters=self.parameters)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/flwr/server/strategy/fedavg.py", line 167, in evaluate
    eval_res = self.evaluate_fn(server_round, parameters_ndarrays, {})
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/PycharmProjects/fl_with_flower/fedavg_mobilnet/server.py", line 68, in evaluate
    loss, accuracy = test(model, testloader, device=device)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/PycharmProjects/fl_with_flower/fedavg_mobilnet/utils.py", line 47, in test
    for data in testloader:
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 265, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 130, in collate
    return {key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem}
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 130, in <dictcomp>
    return {key: collate([d[key] for d in batch], collate_fn_map=collate_fn_map) for key in elem}
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/abdenour/miniconda3/envs/fl_with_flower/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 179, in collate_float_fn
    return torch.tensor(batch, dtype=torch.float64)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: must be real number, not NoneType

[2024-08-14 21:39:08,220][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 24, 'num_gpus': 0.2} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 24, 'num_gpus': 0.2}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
